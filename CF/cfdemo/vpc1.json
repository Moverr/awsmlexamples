{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "VPC with 4 subnets across 2 Availability Zones.",
    "Mappings": {
        "AWSInstanceType2Arch": {
            "c1.medium": {
                "Arch": "64"
            },
            "c1.xlarge": {
                "Arch": "64"
            },
            "m1.large": {
                "Arch": "64"
            },
            "m1.medium": {
                "Arch": "64"
            },
            "m1.small": {
                "Arch": "64"
            },
            "m1.xlarge": {
                "Arch": "64"
            },
            "m2.2xlarge": {
                "Arch": "64"
            },
            "m2.4xlarge": {
                "Arch": "64"
            },
            "m2.xlarge": {
                "Arch": "64"
            },
            "m3.2xlarge": {
                "Arch": "64"
            },
            "m3.xlarge": {
                "Arch": "64"
            }
        },
        "AWSRegionArch2AMI": {
            "ap-northeast-1": {
                "64": "ami-14d86d15"
            },
            "ap-southeast-1": {
                "64": "ami-02eb9350"
            },
            "ap-southeast-2": {
                "64": "ami-ab990e91"
            },
            "eu-west-1": {
                "64": "ami-e5e2d991"
            },
            "sa-east-1": {
                "64": "ami-0039e61d"
            },
            "us-east-1": {
                "64": "ami-f619c29f"
            },
            "us-west-1": {
                "64": "ami-3bcc9e7e"
            },
            "us-west-2": {
                "64": "ami-52ff7262"
            }
        }
    },
    "Outputs": {
        "PrivateSubnets": {
            "Description": "Private Subnets",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        {
                            "Ref": "PrivateSubnet1"
                        },
                        ", ",
                        {
                            "Ref": "PrivateSubnet2"
                        }
                    ]
                ]
            }
        },
        "PublicSubnets": {
            "Description": "Public Subnets",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        {
                            "Ref": "PublicSubnet1"
                        },
                        ", ",
                        {
                            "Ref": "PublicSubnet2"
                        }
                    ]
                ]
            }
        },
        "VPC": {
            "Description": "VPC",
            "Value": {
                "Ref": "VPC"
            }
        }
    },
    "Parameters": {
        "CorporateCidrIp": {
            "Default": "0.0.0.0/0",
            "Description": "Your Company's CidrIp (to restrict traffic to be authorized ONLY from corporate office)",
            "Type": "String"
        },
        "NATInstanceType": {
            "AllowedValues": [
                "m1.small",
                "m1.medium"
            ],
            "Default": "m1.small",
            "Description": "NAT EC2 instance type",
            "Type": "String"
        }
    },
    "Resources": {
        "AttachGateway": {
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                },
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::VPCGatewayAttachment"
        },
        "InternetGateway": {
            "Properties": {},
            "Type": "AWS::EC2::InternetGateway"
        },
        "NAT": {
            "Properties": {
                "DisableApiTermination": "true",
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSRegionArch2AMI",
                        {
                            "Ref": "AWS::Region"
                        },
                        {
                            "Fn::FindInMap": [
                                "AWSInstanceType2Arch",
                                {
                                    "Ref": "NATInstanceType"
                                },
                                "Arch"
                            ]
                        }
                    ]
                },
                "InstanceType": {
                    "Ref": "NATInstanceType"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "NATSecurityGroup"
                    }
                ],
                "SourceDestCheck": "false",
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "NAT-",
                                    {
                                        "Ref": "VPC"
                                    }
                                ]
                            ]
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::Instance"
        },
        "NATIP": {
            "Properties": {
                "Domain": "vpc",
                "InstanceId": {
                    "Ref": "NAT"
                }
            },
            "Type": "AWS::EC2::EIP"
        },
        "NATSecurityGroup": {
            "Properties": {
                "GroupDescription": "NAT Security Group",
                "SecurityGroupIngress": [
                    {
                        "FromPort": "1",
                        "IpProtocol": "-1",
                        "SourceSecurityGroupId": {
                            "Ref": "PrivateSG"
                        },
                        "ToPort": "65535"
                    },
                    {
                        "FromPort": "-1",
                        "IpProtocol": "icmp",
                        "SourceSecurityGroupId": {
                            "Ref": "PrivateSG"
                        },
                        "ToPort": "-1"
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "PrivateInSubnetAclEntry": {
            "Properties": {
                "CidrBlock": "0.0.0.0/0",
                "Egress": "false",
                "Icmp": {
                    "Code": "-1",
                    "Type": "-1"
                },
                "NetworkAclId": {
                    "Ref": "PrivateSubnetAcl"
                },
                "PortRange": {
                    "From": "1",
                    "To": "65535"
                },
                "Protocol": "-1",
                "RuleAction": "allow",
                "RuleNumber": "32000"
            },
            "Type": "AWS::EC2::NetworkAclEntry"
        },
        "PrivateOutSubnetAclEntry": {
            "Properties": {
                "CidrBlock": "0.0.0.0/0",
                "Egress": "true",
                "Icmp": {
                    "Code": "-1",
                    "Type": "-1"
                },
                "NetworkAclId": {
                    "Ref": "PrivateSubnetAcl"
                },
                "PortRange": {
                    "From": "1",
                    "To": "65535"
                },
                "Protocol": "-1",
                "RuleAction": "allow",
                "RuleNumber": "32000"
            },
            "Type": "AWS::EC2::NetworkAclEntry"
        },
        "PrivateRoute": {
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "InstanceId": {
                    "Ref": "NAT"
                },
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                }
            },
            "Type": "AWS::EC2::Route"
        },
        "PrivateRouteTable": {
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::RouteTable"
        },
        "PrivateSG": {
            "Properties": {
                "GroupDescription": "Servers in the Private Subnets",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "3389",
                        "IpProtocol": "tcp",
                        "ToPort": "3389"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "-1",
                        "IpProtocol": "icmp",
                        "ToPort": "-1"
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "PrivateSubnet1": {
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        "0",
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": "10.0.1.0/24",
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "PrivateSubnet2": {
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        "1",
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": "10.0.11.0/24",
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "PrivateSubnetAcl": {
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::NetworkAcl"
        },
        "PrivateSubnetAclAssociation1": {
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PrivateSubnetAcl"
                },
                "SubnetId": {
                    "Ref": "PrivateSubnet1"
                }
            },
            "Type": "AWS::EC2::SubnetNetworkAclAssociation"
        },
        "PrivateSubnetAclAssociation2": {
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PrivateSubnetAcl"
                },
                "SubnetId": {
                    "Ref": "PrivateSubnet2"
                }
            },
            "Type": "AWS::EC2::SubnetNetworkAclAssociation"
        },
        "PrivateSubnetRouteTableAssociation1": {
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                },
                "SubnetId": {
                    "Ref": "PrivateSubnet1"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "PrivateSubnetRouteTableAssociation2": {
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                },
                "SubnetId": {
                    "Ref": "PrivateSubnet2"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "PublicInSubnetAclEntry": {
            "Properties": {
                "CidrBlock": "0.0.0.0/0",
                "Egress": "false",
                "Icmp": {
                    "Code": "-1",
                    "Type": "-1"
                },
                "NetworkAclId": {
                    "Ref": "PublicSubnetAcl"
                },
                "PortRange": {
                    "From": "1",
                    "To": "65535"
                },
                "Protocol": "-1",
                "RuleAction": "allow",
                "RuleNumber": "32000"
            },
            "Type": "AWS::EC2::NetworkAclEntry"
        },
        "PublicOutSubnetAclEntry": {
            "Properties": {
                "CidrBlock": "0.0.0.0/0",
                "Egress": "true",
                "Icmp": {
                    "Code": "-1",
                    "Type": "-1"
                },
                "NetworkAclId": {
                    "Ref": "PublicSubnetAcl"
                },
                "PortRange": {
                    "From": "1",
                    "To": "65535"
                },
                "Protocol": "-1",
                "RuleAction": "allow",
                "RuleNumber": "32000"
            },
            "Type": "AWS::EC2::NetworkAclEntry"
        },
        "PublicRoute": {
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                }
            },
            "Type": "AWS::EC2::Route"
        },
        "PublicRouteTable": {
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::RouteTable"
        },
        "PublicSubnet1": {
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        "0",
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": "10.0.0.0/24",
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "PublicSubnet2": {
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        "1",
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": "10.0.10.0/24",
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "PublicSubnetAcl": {
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::NetworkAcl"
        },
        "PublicSubnetAclAssociation1": {
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PublicSubnetAcl"
                },
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                }
            },
            "Type": "AWS::EC2::SubnetNetworkAclAssociation"
        },
        "PublicSubnetAclAssociation2": {
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PublicSubnetAcl"
                },
                "SubnetId": {
                    "Ref": "PublicSubnet2"
                }
            },
            "Type": "AWS::EC2::SubnetNetworkAclAssociation"
        },
        "PublicSubnetRouteTableAssociation1": {
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "PublicSubnetRouteTableAssociation2": {
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "SubnetId": {
                    "Ref": "PublicSubnet2"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "VPC": {
            "Properties": {
                "CidrBlock": "10.0.0.0/16"
            },
            "Type": "AWS::EC2::VPC"
        }
    }
}
